// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux4Way(in=load,sel=address[0..1],a=wa,b=wb,c=wc,d=wd);
	
	RAM4K(in=in,load=wa,address=address[2..13],out=na);
	RAM4K(in=in,load=wb,address=address[2..13],out=nb);
	RAM4K(in=in,load=wc,address=address[2..13],out=nc);
	RAM4K(in=in,load=wd,address=address[2..13],out=nd);

	
	Mux4Way16(a=na,b=nb,c=nc,d=nd,sel=address[0..1],out=out);
}