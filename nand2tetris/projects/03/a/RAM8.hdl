// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address,a=wa,b=wb,c=wc,d=wd,e=we,f=wf,g=wg,h=wh);
	
	Register(in=in,load=wa,out=na);
	Register(in=in,load=wb,out=nb);
	Register(in=in,load=wc,out=nc);
	Register(in=in,load=wd,out=nd);
	Register(in=in,load=we,out=ne);
	Register(in=in,load=wf,out=nf);
	Register(in=in,load=wg,out=ng);
	Register(in=in,load=wh,out=nh);
	
	Mux8Way16(a=na,b=nb,c=nc,d=nd,e=ne,f=nf,g=ng,h=nh,sel=address,out=out);
}